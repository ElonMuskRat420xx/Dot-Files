!function(){"use strict";let e,t,i=!1;!function(e){e.IsBuyNowReady="IsBuyNowReady",e.BuyNowSubscribeNow="BuyNowSubscribeNow",e.BuyNowQuickAuthFinished="BuyNowQuickAuthFinished",e.BuyNowQuickAuthFailed="BuyNowQuickAuthFailed",e.BuyNowIsReady="BuyNowIsReady",e.BuyNowStartQuickAuth="BuyNowStartQuickAuth",e.BuyNowCheckoutFinished="BuyNowCheckoutFinished"}(e||(e={})),function(e){e.StartBuyNow="StartBuyNow",e.MerchantAuthSucceeded="MerchantAuthSucceeded",e.MerchantAuthFailed="MerchantAuthFailed"}(t||(t={}));const s="BuyNowRuntime";window[s]=new class{constructor(){this.orderDetails=void 0}notifyHostPage(e,t){window.dispatchEvent(new CustomEvent(e,{detail:t}))}listenOnHostPageEvent(e,t){window.addEventListener(e,(e=>{t(e)}))}handleQuickAuthFinished(e){if(e.detail){const i=JSON.parse(e.detail);"skipped"===i.type?window[s].postMessageToHost(t.MerchantAuthFailed,[]):"display"!==i.type||i.displayed?"dismissed"===i.type&&"credential_returned"===i.reason&&window[s].postMessageToHost(t.MerchantAuthSucceeded,[]):window[s].postMessageToHost(t.MerchantAuthFailed,[])}}handleQuickAuthFailed(e){window[s].postMessageToHost(t.MerchantAuthFailed,[])}handleIsBuyNowReady(){window[s].notifyHostPage(e.BuyNowIsReady,"Ready")}handleBuyNowSubscribeNow(e){window[s].postMessageToHost(t.StartBuyNow,[e.detail])}raiseMessageFromHost(t){const i=t.shift(),o=JSON.parse(t[0]).event;i&&"StartMerchantAuth"===i?(this.listenOnHostPageEvent(e.BuyNowQuickAuthFinished,this.handleQuickAuthFinished),this.listenOnHostPageEvent(e.BuyNowQuickAuthFailed,this.handleQuickAuthFailed),this.notifyHostPage(e.BuyNowStartQuickAuth,o)):i&&"CheckoutFinished"===i&&window[s].notifyHostPage(e.BuyNowCheckoutFinished,o)}postMessageToHost(e,t){try{walletBuyNowNativeHandler&&walletBuyNowNativeHandler.sendMessageToHost(e,t)}catch(e){}}initialize(t){return i||(this.listenOnHostPageEvent(e.IsBuyNowReady,this.handleIsBuyNowReady),this.listenOnHostPageEvent(e.BuyNowSubscribeNow,this.handleBuyNowSubscribeNow),i=!0),!0}}}();